アプリケーション名
　開発コード：mizzly

Easy to listen/view
Easy to vote/comment
Easy to record

直感的に操作できること。

画面
　　・ビデオモード(videoが無い場合はSound Only)
　　・PV
　　・The Live
　　・○トラック

曲
　曲には名前がついている。最初のバージョンでは、常にSound1
　曲は4トラックから構成される（もちろん、後で８トラックくらいまでは増やせるようにする）

4トラック（各モノクロ）
　・各トラックに、複数サンプルがある。
　
　・サンプルの内部名はsample_<track number>_<sample開始ミリ秒>.flvになるようにする。
　　サーバ側でいろいろできたらいいんだけど、まぁそれはRubyかPythonでやるか。

録音できるようにする。
　各トラックには、Audio Recマーク (R)ボタンがあり、それを押すと(R)ボタンが赤丸になる。
　(セキュリティダイアログはこの時初めて表示されるようにする）
　同時に indicator(Gauge)に現在の録音レベルが表示される。これは録音時にも表示され続ける。
dd


曲には現在のカーソル位置がある。
　・再生ボタンを押すと、カーソル位置から全トラックの再生が開始される。
　・録音ボタンを押すと、曲が録音モードになる。
　　この状態で再生を押すと、再生モードのトラックは再生され、録音モードのトラックは録音される。
　　
　・停止ボタンを押すと、曲全体が停止する。
　
　
トラックの再生
　トラックの中では、一番新しく始まったサンプルが再生される。
　　ソロ：そのトラックだけ再生される。
　　ミュート：そのトラックだけミュート状態になり。再生ボリュームが0になる。
　　
　
ビデオも同じようなものにする。


いずれぶつかる課題。 fMSではデータがflvとして保存される。いずれは、生データへの変換が必要になる。
　いまのところ、flvの解析、音声Codecのデコード、生データの再生はなんとかなりそうだ。
　

マルチユーザ。　
曲のブランチ
トラックの取得（楽器パートの取得）

コメント共有
ループ、VST-i相当機能のExtentionableな構成　Extention開発環境の構築。Vocaloid機能とかを足せるように。
音声（またはVideo)のアップロード。
　(VJが参加できるようにする。ProessingやFlash製作者用）
MIDIのインポート
　Scoreの入力
　
ログイン
他ユーザのNonTrack Listen(Jamming mode)

Offline
　
共有できる歌詞/スコア表示
　
曲のコピー、切り出し
mixing

native client/rewire client/iPhone.

ＢＰＭ設定。
　メトロノーム
　
いらないものは捨てていく、実験して、捨てる。迷ったときは自分が欲しいものを！
シンプルに、シンプルに。

実装
　とりあえず、慣れているという理由だけで。ActionScriptで全部かく。